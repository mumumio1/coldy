{{- if .Values.users.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "coldy.fullname" . }}-users
  labels:
    app: {{ include "coldy.name" . }}-users
    {{- include "coldy.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.users.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "coldy.name" . }}-users
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.users.service.metricsPort }}"
        prometheus.io/path: "/metrics"
      labels:
        app: {{ include "coldy.name" . }}-users
    spec:
      serviceAccountName: {{ include "coldy.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
      containers:
      - name: users
        image: "{{ .Values.users.image.repository }}:{{ .Values.users.image.tag | default .Values.global.imageTag }}"
        imagePullPolicy: Always
        ports:
        - name: grpc
          containerPort: {{ .Values.users.service.grpcPort }}
          protocol: TCP
        - name: metrics
          containerPort: {{ .Values.users.service.metricsPort }}
          protocol: TCP
        env:
        - name: ENV
          value: "production"
        - name: GRPC_PORT
          value: "{{ .Values.users.service.grpcPort }}"
        - name: METRICS_PORT
          value: "{{ .Values.users.service.metricsPort }}"
        - name: DB_HOST
          value: "{{ .Values.global.database.host }}"
        - name: DB_PORT
          value: "{{ .Values.global.database.port }}"
        - name: DB_USER
          value: "{{ .Values.global.database.user }}"
        - name: DB_NAME
          value: "{{ .Values.global.database.name }}"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: coldy-db-secret
              key: password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: coldy-jwt-secret
              key: secret
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "{{ .Values.global.tracing.endpoint }}"
        livenessProbe:
          httpGet:
            path: /health
            port: metrics
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: metrics
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.users.resources | nindent 10 }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "coldy.fullname" . }}-users
  labels:
    app: {{ include "coldy.name" . }}-users
    {{- include "coldy.labels" . | nindent 4 }}
spec:
  type: {{ .Values.users.service.type }}
  ports:
  - port: {{ .Values.users.service.grpcPort }}
    targetPort: grpc
    protocol: TCP
    name: grpc
  - port: {{ .Values.users.service.metricsPort }}
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app: {{ include "coldy.name" . }}-users
{{- end }}

